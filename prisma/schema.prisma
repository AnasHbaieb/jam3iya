// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  imageUrl    String?
  shortDescription String?
  secondaryImageUrl String?
  category    String
  rang        Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model ContentPost {
  id                Int      @id @default(autoincrement())
  title             String   @unique
  category          String? 
  description       String?
  excerpt           String? // إضافة حقل excerpt
  date              String?  
  imageUrl          String?
  videoUrl          String? 
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  rang              Int      @default(0)
}

model CarouselImage {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model contactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model PageContent {
  id        Int      @id @default(autoincrement())
  pageName  String   @unique
  content   String? // حقل جديد للمحتوى النصي المنسق
  documents PageDocument[] // علاقة واحد إلى متعدد مع مستندات PDF
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PageDocument {
  id          Int      @id @default(autoincrement())
  title       String
  url         String
  pageContentId Int // مفتاح خارجي لربط المستند بـ PageContent
  pageContent PageContent @relation(fields: [pageContentId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VolunteerApplication {
  id               Int      @id @default(autoincrement())
  fullName         String
  ageCategory      String
  gender           String
  phone            String
  email            String   @unique
  educationLevel   String
  previousExperience String?
  organizationName String?
  interestAreas    String[]
  createdAt        DateTime @default(now())
}